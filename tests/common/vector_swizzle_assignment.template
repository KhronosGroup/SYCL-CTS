/*************************************************************************
//
//  SYCL Conformance Test Suite
//
//
//  Copyright (c) 2018-2022 Codeplay Software LTD. All Rights Reserved.
//  Copyright (c) 2023 The Khronos Group Inc.
//
//  Licensed under the Apache License, Version 2.0 (the "License");
//  you may not use this file except in compliance with the License.
//  You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
//  Unless required by applicable law or agreed to in writing, software
//  distributed under the License is distributed on an "AS IS" BASIS,
//  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//  See the License for the specific language governing permissions and
//  limitations under the License.
//
**************************************************************************/

// Note: this is essentially a copy of vector.template, but it has extra
// #define SYCL_SIMPLE_SWIZZLES which is required for the swizzles test.

$IFDEF
#define SYCL_SIMPLE_SWIZZLES

#include "../common/common.h"
#include "../common/common_vec.h"

#define TEST_NAME vector_$CATEGORY_$TYPE_NAME

namespace vector_$CATEGORY_$TYPE_NAME__ {
using namespace sycl_cts;

class TEST_NAME : public util::test_base {
 public:
  /** return information about this test
   */
  void get_info(test_base::info &out) const override {
    set_test_info(out, TOSTRING(TEST_NAME), TEST_FILE);
  }

$EXCLUDE_IF_SIMSYCL_BYTE_BEGIN
  $TEST_FUNCS
$EXCLUDE_IF_SIMSYCL_BYTE_END

  /** execute the test
   */
  void run(util::logger &log) override {

$EXCLUDE_IF_SIMSYCL_BYTE_BEGIN
    $FUNC_CALLS
$EXCLUDE_IF_SIMSYCL_BYTE_END
$FAIL_IF_SIMSYCL_BYTE

  }
};

util::test_proxy<TEST_NAME> proxy;

} /* namespace vector_$CATEGORY_$TYPE_NAME__ */
$ENDIF
