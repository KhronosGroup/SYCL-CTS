/*************************************************************************
//
//  SYCL Conformance Test Suite
//
//  Copyright:	(c) 2017 by Codeplay Software LTD. All Rights Reserved.
//
**************************************************************************/

#define SYCL_SIMPLE_SWIZZLES

#include "../common/common.h"
#include "../common/common_vec.h"

#define TEST_NAME vector_swizzles

namespace vector_swizzles__ {
using namespace sycl_cts;

/** Test each combination of vector swizzles can be generated
 *  and used like a normal vector
 */
class TEST_NAME : public util::test_base {
 public:
  /** return information about this test
   */
  virtual void get_info(test_base::info &out) const override {
    set_test_info(out, TOSTRING(TEST_NAME), TEST_FILE);
  }

  /** execute the test
   */
  virtual void run(util::logger &log) override {
    using namespace cl::sycl;

    try {
      /** Test vector swizzles
       */
      // 1 dimensional swizzles
      vec<int, 2> OneDimTestVec = vec<int, 1>(0);
      $1D_SWIZZLES

      // 2 dimensional swizzles
      vec<int, 2> TwoDimTestVec = vec<int, 2>(0, 1);
      $2D_SWIZZLES

      // 3 dimensional swizzles
      vec<int, 3> ThreeDimTestVec = vec<int, 3>(0, 1, 2);
      $3D_SWIZZLES

      // 4 dimensional swizzles
      vec<int, 4> FourDimTestVec = vec<int, 4>(0, 1, 2, 3);
      $4D_SWIZZLES

      // performed on standard vectors

      /**
       */
    } catch (cl::sycl::exception e) {
      log_exception(log, e);
      cl::sycl::string_class errorMsg =
          "a SYCL exception was caught: " + cl::sycl::string_class(e.what());
      FAIL(log, errorMsg.c_str());
    }
  }
};

util::test_proxy<TEST_NAME> proxy;

} /* namespace vector_swizzles__ */
